To be an aggregate in C++, a type must meet the following criteria:

Is a class type (a struct, class, or union), or an array type (a built-in array or std::array).
Has no private or protected non-static data members (14.5 -- Public and private members and access specifiers).
Has no user-declared or inherited constructors (14.9 -- Introduction to constructors).
Has no base classes (24.2 -- Basic inheritance in C++).
Has no virtual member functions (25.2 -- Virtual functions and polymorphism).


designated init
struct Foo
{
    int a{ };
    int b{ };
    int c{ };
};

int main()
{
    Foo f1{ .a{ 1 }, .c{ 3 } }; // ok: f1.a = 1, f1.b = 0 (value initialized), f1.c = 3
    Foo f2{ .a = 1, .c = 3 };   // ok: f2.a = 1, f2.b = 0 (value initialized), f2.c = 3
    Foo f3{ .b{ 2 }, .a{ 1 } }; // error: initialization order does not match order of declaration in struct

    return 0;
}
