#include "std_lib_facilities.h"

void fill_vector(istream& ist, vector<int>& v, char terminator) {
    // read integers from ist into v until we reach eof() or terminator

    for (int i; ist >> i; ) v.push_back(i);
    if (ist.eof()) { cout << "ENDOF\n"; return; } // fine: we found the end of file
    if (ist.bad()) error("ist is bad"); // stream corrupted; let’s get out of here!
    if (ist.fail()) {// clean up the mess as best we can and report the problem
        cout << "WRONG1\n";
        ist.clear(); // clear stream state,
        // so that we can look for terminator
        cout << "WRONG3\n";
        char c;
        ist >> c; // read a character, hopefully terminator
        cout << c << "\n";
        if (c != terminator) { 
            cout << "WRONG2\n";// unexpected character
            ist.unget(); // put that character back
            ist.clear(ios_base::failbit); // set the state to fail()
        }
    }
}

void skip_to_int()
{
    if (cin.fail()) { // we found something that wasn’t an integer
        cin.clear(); // we’d like to look at the characters
        for (char ch; cin >> ch; ) { // throw away non-digits
            if (isdigit(ch) || ch == '-') {
                cin.unget(); // put the digit back,
                // so that we can read the number
                return;
            }
        }
    }
    error("no input"); // eof or bad: give up
}




int get_int()
{
    int n = 0;
    while (true) {

        if (cin >> n) return n;
        if (cin.eof()) {
            error("no input");
    }
        cout << "Sorry, that was not a number; please try again\n";
        skip_to_int();
    }
}

int get_int(int low, int high, const string& greeting, const string& sorry)
{
    
    cout << greeting << ": [" << low << ':' << high << "]\n";

    while (true) {
        int n = get_int();
        if (low <= n && n <= high) return n;
        cout << sorry << ": [" << low << ':' << high << "]\n";

    }
}




int main()
try {
    //ofstream ost{ "trop" }; 
    //if (!ost) error("can't open output file ", "trop");
    //
    ifstream ist{ "tre"}; // ist is an input stream for the file named name
    ist.exceptions(ist.exceptions() | ios_base::badbit);

    vector<int> nn;

    char x{ 'x' };

    if (!ist) error("can't open input file ", "tre");

    fill_vector(ist, nn, x);

    for (int i = 0; i < nn.size(); ++i)
        cout << nn[i] << "\n";
     
    
    
    get_int(10, 20, "hello", "bye");


    // if we get here n is in [1:10] 

    


    cout << "Please enter an integer in the range 1 to 10 (inclusive):\n";
    int n = 0;
    while (true) {
        if (cin >> n) { // we got an integer; now check it
            if (1 <= n && n <= 10) break;
            cout << "Sorry " << n
                << " is not in the [1:10] range; please try again\n";
        }
        else {
            cout << "Sorry, that was not a number; please try again\n";
            skip_to_int();
        }
    }









}


catch (exception& e) {
    cerr << e.what();
}
catch (...) {
    cerr << "unknown exception";
}

