Ex.1
int: 4 bytes
double: 8 bytes
bool: 1 byte

Ex.2
int x = 10;
int* p = &x;
std::cout << p;
Output:
0000057432FF734 (hexadecimal)


Ex.3
void to_lower(char* s) {
if (*s >= 'A' && *s <= 'Z') *s = *s + 32;
}
char d[] = "HeLLO MUdda, HELLO FUDdAA";
	int size = sizeof(d) / sizeof(d[0]);
	for (int i = 0; i < size; ++i) {
		to_lower(&d[i]);
std::cout << d;

void to_lower(char* s) {
	int count = 0;
	int i = 0;
	while (s[i] != '\0') {
		++count;
		++i;
	}
	++count;

	for (int i = 0; i < count; ++i) {

		if (s[i] >= 'A' && s[i] <= 'Z') s[i] = s[i] + 32;

	}
}

	to_lower(d);
	std::cout << d;



Ex.4
char* strrdup(const char* s) {
	const char* t = s;
	int count = 0;
	while (*t != '\0') {
		++count;
		++t;
	}
	++count;
	char* p = new char[count];

	for (int i = 0; i < count; ++i) {

		p[i] = s[i];
	}
	return p;
}

char* strrdup(const char* s) {

	int count = 0;
	int i = 0;
	while (s[i] != '\0') {
		++count;
		++i;
	}
	++count;
	char* p = new char[count];
	
	for (int i = 0; i < count; ++i) {

		p[i] = s[i];

	}
	return p;

}

char* pp = strrdup("HeLLO");


	std::cout << pp;



Ex.4 
const char* findx(const char* s, const char* x) {

	const char* tp = nullptr;
	
	int count_s = 0;
	int i_s = 0;
	while (s[i_s] != '\0') {
		++count_s;
		++i_s;
	}
	++count_s;

	int count_w = 0;
	int i_w = 0;
	while (x[i_w] != '\0') {
		++count_w;
		++i_w;
	}
	//++count_w;

	int count_x = 0;
	int address_x = 0;
	for (int i = 0; i < count_s; ++i) {
		address_x = i;
		std::cout << i <<"\n";
		for (int z = 0; z < count_w; ++z) {
			if (count_s <= z + i) {

				std::cout << count_s << "\n";
				std::cout << count_w << "\n";
				std::cout << i << "\n";
				std::cout << "Enough\n";
				return nullptr;
			}
			if (s[i + z] == x[z]) { ++count_x; std::cout << count_x << "\n"; }
			else count_x = 0;
			
		}
		if (count_x == count_w) { std::cout << "Found\n"; break; }
	}

	std::cout << address_x << "\n";
	std::cout << count_w<< "\n";
	tp = &s[address_x];

	//char* p = const_cast<char*>(tp);

	return tp;
}

	char d[] = "Find it, and find it now too fast";

	char w[] = "now";

	const char* n = findx(d, w);


	std::cout << "The first occurence if the word " << w << " is at: " << n;












