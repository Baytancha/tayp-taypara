#include "std_lib_facilities.h"
void swap_v(int a, int b) { int temp; temp = a, a = b; b = temp;  cout << a << ' ' << b <<"\n";
}
void swap_r(int& a, int& b) { int temp; temp = a, a = b; b = temp; cout << a << ' ' << b << "\n";
}
void d_swap_r(double& a, double& b) {
    double temp; temp = a, a = b; b = temp; cout << a << ' ' << b << "\n";
}
void swap_cr(const int& a, const int& b) {
     cout << a << ' ' << b << "\n";
}


int main()
{
    int x = 7;
    int y = 9;
    swap_v(x, y);
    cout << x << ' ' << y << "\n";
    swap_r(x, y);
    cout << x << ' ' << y << "\n";
    swap_cr(x, y);

    const int cx = 7;
    const int cy = 9;
    swap_v(7.7, 9.9);
    cout << cx << ' ' << cy << "\n";
    
    cout << cx << ' ' << cy << "\n";
    swap_cr(7.7, 9.9);



    double dx = 7.7;
    double dy = 9.9;

    swap_v(dx, dy);
    cout << dx << ' ' << dy << "\n";
    d_swap_r(dx, dy);
    cout << dx << ' ' << dy << "\n";
    swap_cr(dx, dy);


   
}













namespace X { 
    int var{ 0 }; 
    void print() {

        cout << "X\n";
    cout << var << "\n";
}

}


namespace Y {
    int var{ 0 };
    void print() {

        cout << "Y\n";
        cout << var << "\n";
    }


}

namespace Z {
    int var{ 0 };
    void print() {
        cout << "Z\n";

        cout << var << "\n";
    }

}


int main()
try {

    X::var = 7;
    X::print(); // print X’s var

    using namespace Y;
    var = 9;
    print(); // print Y’s var
    { using Z::var;
    using Z::print;
    var = 11;
    print(); // print Z’s var
    }
    
        print(); // print Y’s var
    X::print(); // print X’s var


    keep_window_open();    // cope with Windows console mode
    return 0;
}
catch (exception& e) {
    cerr << e.what() << endl;
    keep_window_open("~~");
    return 1;
}
catch (...) {
    cerr << "exception \n";
    keep_window_open("~~");
    return 2;
}


















