
Point tl{ 100,100 }; // to become top left corner of window
	Mmy_window win{ tl,900,900,"Canvas" }; // make a simple window
	win.set_label("Ex.1");

	win.wait_for_button();

	return 0;











////////////////////////////////////////////////
header file:

struct Mmy_window : Graph_lib::Window {
    Mmy_window(Point xy, int w, int h, const string& title);
    bool wait_for_button(); // simple event loop

private:
    Button next_button;     // the "next" button
    Button quit_button;
    bool button_pushed;     // implementation detail

    static void cb_next(Address, Address); // callback for next_button
    void next();            // action to be done when next_button is pressed
    void quit();
};

/////////////////////////////////////////////
cpp file:
Mmy_window::Mmy_window(Point xy, int w, int h, const string& title) :
    Window(xy, w, h, title),
    next_button(Point(x_max() - 70, 0), 70, 20, "Next", [](Address, Address pw) {reference_to<Mmy_window>(pw).next(); }),
    button_pushed(false),

    quit_button(Point(x_max() - 70, 20), 70, 20, "Quit", [](Address, Address pw) {reference_to<Mmy_window>(pw).quit(); })


{
    attach(next_button);
    attach(quit_button);
}

//------------------------------------------------------------------------------

bool Mmy_window::wait_for_button()
// modified event loop:
// handle all events (as per default), quit when button_pushed becomes true
// this allows graphics without control inversion
{
    show();
    button_pushed = false;
#if 1
    // Simpler handler
    while (!button_pushed) Fl::wait();
    Fl::redraw();
#else
    // To handle the case where the user presses the X button in the window frame
    // to kill the application, change the condition to 0 to enable this branch.
    Fl::run();
#endif
    return button_pushed;
}

//------------------------------------------------------------------------------

//void Mmy_window::cb_next(Address, Address pw)
//// call Simple_window::next() for the window located at pw
//{
//    reference_to<Mmy_window>(pw).next();
//}

//------------------------------------------------------------------------------

void Mmy_window::next()
{
    button_pushed = true;
    //hide();
}


//------------------------------------------------------------------------------

void Mmy_window::quit()
{
    hide();
}


